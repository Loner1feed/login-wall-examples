{"version":3,"file":"static/js/872.3d74cb89.chunk.js","mappings":"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","sources":["components/login-form/login-form.jsx","components/container/container.jsx","pages/example1/common/content-block/content-block.jsx","pages/example2/common/login-modal/login-modal.jsx","pages/example2/example2.jsx","utils/hooks/useOnScreen.js","utils/constants/colors.js","utils/helpers/color-inverter.js","utils/helpers/generate-block-styles.js"],"sourcesContent":["import { Button, Form, Input } from 'antd'\r\nimport React, { useState } from 'react';\r\n\r\nexport const LoginForm = ({ form, onFinish }) => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // simulate form finish\r\n  const finishHandler = (values) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      onFinish(values);\r\n      setLoading(false);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"login-form\"\r\n      className='login-form'\r\n      onFinish={finishHandler}\r\n      autoComplete=\"off\"\r\n      layout='vertical'\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n\r\n          {\r\n            min: 6,\r\n            message: \"password needs to be at least 6 characrets!\"\r\n          }\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item className='login-btn'>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './container.style.scss';\r\n\r\nexport const Container = ({ children, styles = {} }) => (\r\n  <div className='container' style={{ ...styles }}>\r\n    {children}\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { Container } from '../../../../components/container/container';\r\n\r\nimport \"./content-block.style.scss\";\r\n\r\nexport const ContentBlock = ({ children, title, customStyles, id }) => {\r\n  return (\r\n    <div id={id} className={`content-block`} style={customStyles}>\r\n      <Container>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Modal } from 'antd'\r\nimport React from 'react'\r\nimport { LoginForm } from '../../../../components/login-form/login-form';\r\n\r\nimport \"./login-modal.style.scss\";\r\n\r\nexport const LoginModal = ({ open, onFinish }) => {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        footer={null}\r\n        open={open}\r\n        title=\"login wall modal\"\r\n      >\r\n        <LoginForm form={form} onFinish={onFinish} />\r\n      </Modal>\r\n    </>\r\n    \r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { ContentBlock } from '../example1/common/content-block/content-block';\r\nimport { generateBlockStyles } from '../../utils/helpers/generate-block-styles';\r\nimport { colors } from '../../utils/constants/colors';\r\nimport { LoginModal } from './common/login-modal/login-modal';\r\nimport { useOnScreen } from '../../utils/hooks/useOnScreen';\r\nimport { Form, notification } from 'antd';\r\n\r\nconst Example2 = () => {\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [modalBlocked, setModalBlocked] = useState(false);\r\n  const targetRef = useRef(null);\r\n  const isVisible = useOnScreen(targetRef);\r\n\r\n  const [api, contextHolder] = notification.useNotification();\r\n  \r\n\r\n  const openNotificationWithIcon = (type, values = {}) => {\r\n    api[type]({\r\n      message: 'Form data sent',\r\n      description: `We got username: ${values.username} and password: ${values.password}`\r\n    });\r\n  };\r\n\r\n  // form finish\r\n  const onFinish = (values) => {\r\n    openNotificationWithIcon('success', values);\r\n    form.resetFields();\r\n    setOpen(false);\r\n    setModalBlocked(true);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    isVisible && !modalBlocked && setOpen(true);\r\n  }, [isVisible]);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <div className='content'>\r\n        {colors.map((el, i) => (\r\n          <ContentBlock key={i} id={`block-${i}`} title={`Block ${i + 1} title`} customStyles={{ ...generateBlockStyles(el) }}>\r\n            <p>some content i can display</p>\r\n          </ContentBlock>\r\n        ))}\r\n        <div ref={targetRef}>\r\n          <ContentBlock id={`block-target`} title={`Block 5 title`} customStyles={{ ...generateBlockStyles(colors[0]) }}>\r\n            <p>some content i can display</p>\r\n          </ContentBlock>\r\n        </div>\r\n      </div>\r\n\r\n      <LoginModal open={open} onFinish={onFinish} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Example2;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useMemo, useState } from \"react\"\r\n\r\nexport const useOnScreen = (ref) => {\r\n\r\n  const [isIntersecting, setIntersecting] = useState(false)\r\n\r\n  const observer = useMemo(() => new IntersectionObserver(\r\n    ([entry]) => setIntersecting(entry.isIntersecting)\r\n  ), [ref])\r\n\r\n\r\n  useEffect(() => {\r\n    observer.observe(ref.current)\r\n    return () => observer.disconnect()\r\n  }, [])\r\n\r\n  return isIntersecting;\r\n}","export const colors = [\"#8E7AB5\", \"#B784B7\",\"#EEA5A6\", \"#E493B3\"];","function padZero(str, len) {\r\n  len = len || 2;\r\n  var zeros = new Array(len).join('0');\r\n  return (zeros + str).slice(-len);\r\n}\r\n\r\nexport const colorInverter = (hex, bw) => {\r\n  if (hex.indexOf('#') === 0) {\r\n    hex = hex.slice(1);\r\n  }\r\n  // convert 3-digit hex to 6-digits.\r\n  if (hex.length === 3) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n  if (hex.length !== 6) {\r\n    throw new Error('Invalid HEX color.');\r\n  }\r\n  var r = parseInt(hex.slice(0, 2), 16),\r\n    g = parseInt(hex.slice(2, 4), 16),\r\n    b = parseInt(hex.slice(4, 6), 16);\r\n  if (bw) {\r\n    // https://stackoverflow.com/a/3943023/112731\r\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n      ? '#000000'\r\n      : '#FFFFFF';\r\n  }\r\n  // invert color components\r\n  r = (255 - r).toString(16);\r\n  g = (255 - g).toString(16);\r\n  b = (255 - b).toString(16);\r\n  // pad each with zeros and return\r\n  return \"#\" + padZero(r) + padZero(g) + padZero(b);\r\n}","import { colorInverter } from \"./color-inverter\";\r\n\r\nexport const generateBlockStyles = (hex) => ({\r\n  background: hex,\r\n  color: colorInverter(hex, true)\r\n});"],"names":["LoginForm","_ref","form","onFinish","loading","setLoading","useState","_jsxs","Form","name","className","values","setTimeout","autoComplete","layout","children","_jsx","Item","label","rules","required","message","Input","min","Password","Button","type","htmlType","Container","styles","style","ContentBlock","title","customStyles","id","LoginModal","open","useForm","_Fragment","Modal","footer","Example2","setOpen","modalBlocked","setModalBlocked","targetRef","useRef","isVisible","ref","isIntersecting","setIntersecting","observer","useMemo","IntersectionObserver","entry","useEffect","observe","current","disconnect","useOnScreen","api","contextHolder","notification","useNotification","colors","map","el","i","concat","generateBlockStyles","arguments","length","undefined","description","username","password","openNotificationWithIcon","resetFields","padZero","str","len","Array","join","slice","colorInverter","hex","bw","indexOf","Error","r","parseInt","g","b","toString","background","color"],"sourceRoot":""}